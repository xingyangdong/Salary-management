<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.one.ssm.admin.user.mapper.ShensuMapper">
  <resultMap id="BaseResultMap" type="com.one.ssm.admin.user.model.Shensu">
    <id column="shensu_id" jdbcType="INTEGER" property="shensuId" />
    <result column="sa_id" jdbcType="BIGINT" property="saId" />
    <result column="use_id" jdbcType="INTEGER" property="useId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="shensu_next" jdbcType="VARCHAR" property="shensuNext" />
    <result column="zhuangtai" jdbcType="INTEGER" property="zhuangtai" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shensu_id, sa_id, use_id, user_name, shensu_next, zhuangtai
  </sql>
  <select id="selectByExample" parameterType="com.one.ssm.admin.user.model.ShensuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shensu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shensu
    where shensu_id = #{shensuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shensu
    where shensu_id = #{shensuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.one.ssm.admin.user.model.ShensuExample">
    delete from shensu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.one.ssm.admin.user.model.Shensu">
    insert into shensu (shensu_id, sa_id, use_id, 
      user_name, shensu_next, zhuangtai
      )
    values (#{shensuId,jdbcType=INTEGER}, #{saId,jdbcType=BIGINT}, #{useId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{shensuNext,jdbcType=VARCHAR}, #{zhuangtai,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.one.ssm.admin.user.model.Shensu">
    insert into shensu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shensuId != null">
        shensu_id,
      </if>
      <if test="saId != null">
        sa_id,
      </if>
      <if test="useId != null">
        use_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="shensuNext != null">
        shensu_next,
      </if>
      <if test="zhuangtai != null">
        zhuangtai,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shensuId != null">
        #{shensuId,jdbcType=INTEGER},
      </if>
      <if test="saId != null">
        #{saId,jdbcType=BIGINT},
      </if>
      <if test="useId != null">
        #{useId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="shensuNext != null">
        #{shensuNext,jdbcType=VARCHAR},
      </if>
      <if test="zhuangtai != null">
        #{zhuangtai,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.one.ssm.admin.user.model.ShensuExample" resultType="java.lang.Long">
    select count(*) from shensu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shensu
    <set>
      <if test="record.shensuId != null">
        shensu_id = #{record.shensuId,jdbcType=INTEGER},
      </if>
      <if test="record.saId != null">
        sa_id = #{record.saId,jdbcType=BIGINT},
      </if>
      <if test="record.useId != null">
        use_id = #{record.useId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.shensuNext != null">
        shensu_next = #{record.shensuNext,jdbcType=VARCHAR},
      </if>
      <if test="record.zhuangtai != null">
        zhuangtai = #{record.zhuangtai,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shensu
    set shensu_id = #{record.shensuId,jdbcType=INTEGER},
      sa_id = #{record.saId,jdbcType=BIGINT},
      use_id = #{record.useId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      shensu_next = #{record.shensuNext,jdbcType=VARCHAR},
      zhuangtai = #{record.zhuangtai,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.one.ssm.admin.user.model.Shensu">
    update shensu
    <set>
      <if test="saId != null">
        sa_id = #{saId,jdbcType=BIGINT},
      </if>
      <if test="useId != null">
        use_id = #{useId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="shensuNext != null">
        shensu_next = #{shensuNext,jdbcType=VARCHAR},
      </if>
      <if test="zhuangtai != null">
        zhuangtai = #{zhuangtai,jdbcType=INTEGER},
      </if>
    </set>
    where shensu_id = #{shensuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.one.ssm.admin.user.model.Shensu">
    update shensu
    set sa_id = #{saId,jdbcType=BIGINT},
      use_id = #{useId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      shensu_next = #{shensuNext,jdbcType=VARCHAR},
      zhuangtai = #{zhuangtai,jdbcType=INTEGER}
    where shensu_id = #{shensuId,jdbcType=INTEGER}
  </update>
</mapper>